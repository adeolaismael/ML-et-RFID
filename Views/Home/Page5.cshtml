@{
    ViewData["Title"] = "Page 5";
}

<head>
    <meta charset="UTF-8">
    
    <link rel="stylesheet" type="text/css" href="~/Page5.css">
   


</head>


<body>

    <header>

        <nav class="navbar5">
            <ul>
                <li> <h1 class="nomdusite"><strong>RFID WEBSITE</strong></h1></li>
               
            </ul>
        </nav>

    </header>

    <div class="text-center">
        <span class="animation-text"> <h1 class="display-4"> <u>SVM</u></h1>  </span>
        <p> <br><br></p>

        <h2> <strong>Veuillez choisir vos hyperparamétres</strong></h2>
        <p> <br><br> </p>

       


        <form asp-action="SVCClassifier" method="post">
            <span class="info-tooltip" data-toggle="tooltip" data-placement="top" title="Le noyau utilisé pour la transformation des données dans un espace de dimension supérieure. Les noyaux les plus couramment utilisés sont le noyau linéaire, le noyau polynomial et le noyau RBF">
                <span class="animation-text"> <h5>Kernel</h5> </span> </span>
            <select name="selectedItem1">
                <option value="linear">linear</option>
                <option value="poly">poly</option>
                <option value="rbf" selected>rbf</option>
                <option value="sigmoid">sigmoid</option>
            </select>
            <p> <br><br> </p>

            <label for="hyperparameter1">  <span class="info-tooltip" data-toggle="tooltip" data-placement="top" title="C'est un hyperparamètre de régularisation qui contrôle la marge d'erreur. Une valeur plus élevée de C permet au modèle de tolérer moins d'erreurs de classification sur les données d'entraînement. En d'autres termes, une valeur plus élevée de C conduit à une frontière de décision plus complexe et plus flexible, tandis qu'une valeur plus faible de C conduit à une frontière de décision plus simple et moins flexible"><h5>C</h5> </span> </span></label>
            <p> <br> </p>
            <input type="range" id="rangeInput1" name="hyperparameter1" min="0.01" max="10" step="0.01" value="1.0">
            <p id="selectedValue1">0.01</p>

            <p> <br><br> </p>
            

            <label for="hyperparameter2"> <span class="info-tooltip" data-toggle="tooltip" data-placement="top" title="C'est un hyperparamètre de régularisation qui contrôle la flexibilité de la frontière de décision. Une valeur plus élevée de gamma conduit à une frontière de décision plus complexe et plus flexible, tandis qu'une valeur plus faible de gamma conduit à une frontière de décision plus simple et moins flexible"><h5>Gamma</h5> </span>  </span> </label>
            <p> <br> </p>
            <input type="range" id="rangeInput2" name="hyperparameter2" min="0.01" max="10" step="0.01" value="0.1">
            <p id="selectedValue2">0.01</p>

            <p> <br><br></p>

            <label for="hyperparameter3"><span class="info-tooltip" data-toggle="tooltip" data-placement="top" title="C'est un hyperparamètre qui contrôle la puissance de la fonction polynomiale utilisée pour le noyau polynomial. Il est 	utilisé uniquement lorsque le noyau est de type polynomial"> <span class="animation-text"><h5>Degré</h5> </span></span></label>
            <p> <br> </p>
            <input type="range" id="rangeInput3" name="hyperparameter3" min="1" max="3" value="3">
            <p id="selectedValue3">1</p>
            <p> <br><br></p>

            <label for="hyperparameter4">
                <span class="info-tooltip" data-toggle="tooltip" data-placement="top" title="C'est un hyperparamètre utilisé pour le noyau polynomial et le noyau RBF. Il contrôle l'influence relative des termes de degré supérieur et des termes de degré inférieur"> <span class="animation-text"><h5>Coef</h5> </span></span>
            </label>
            <p> <br> </p>
            <input type="range" id="rangeInput4" name="hyperparameter4" min="-1" max="1" value="0.0">
            <p id="selectedValue4">-1</p>
            <p> <br><br></p>

            <span class="info-tooltip" data-toggle="tooltip" data-placement="top" title="C'est un hyperparamètre qui contrôle la tolérance pour la convergence du modèle">
                <span class="animation-text"><h5>Tolérance</h5> </span>
            </span>
            <select name="selectedItem2">
                <option value="1e-3" selected>1e-3</option>
                <option value="1e-4">1e-4</option>
                <option value="1e-5">1e-5</option>
            </select>

            <p> <br><br></p>
            <p> <button type="submit" class="dropbtn" onclick="window.location.href='@Url.Action("ResultMethode3", "Home")'">Valider</button>
        </form>



       <div class="btn">
           
          <div class="button-container">
           <input class="dropbtn" type="submit" name="envoi" value="Retour"  onclick="window.location.href='@Url.Action("Index", "Home")'" style="width: 250px; height: 50px; font-size: 24px; padding: 10px;">
          </div>
        </div>

       
    </div>

    <script>
        const rangeInput1 = document.getElementById('rangeInput1');
        const rangeInput2 = document.getElementById('rangeInput2');
        const rangeInput3 = document.getElementById('rangeInput3');
        const rangeInput4 = document.getElementById('rangeInput4');
        const selectedValue1 = document.getElementById('selectedValue1');
        const selectedValue2 = document.getElementById('selectedValue2');
        const selectedValue3 = document.getElementById('selectedValue3');
        const selectedValue4 = document.getElementById('selectedValue4');

        rangeInput1.addEventListener('input', () => {
            selectedValue1.textContent = rangeInput1.value;
        });
         rangeInput2.addEventListener('input', () => {
            selectedValue2.textContent = rangeInput2.value;
        });
         rangeInput3.addEventListener('input', () => {
            selectedValue3.textContent = rangeInput3.value;
        });
        rangeInput4.addEventListener('input', () => {
            selectedValue4.textContent = rangeInput4.value;
        });
    </script>
       
        
</body>
